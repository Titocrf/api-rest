{
  "swagger": "2.0",
  "info": {
    "title": "Api Rest Teste",
    "description": "API feita para testes",
    "version": "1.0.0"
  },
  "host": "localhost:8000",
  "basePath": "/api/",
  "schemes": [
    "http"
  ],
  "paths": {
    "/hello": {
      "get": {
        "summary": "Retorna um JSON com a mensagem e hello world",
        "description": "Descrição opcional",
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/response"
            }
          }
        }
      }
    },
    "/login": {
      "post": {
        "summary": "Faz login do usuário",
        "description": "Rota para autenticação do usuário",
        "parameters": [
          {
            "name": "email",
            "in": "formData",
            "required": true,
            "type": "string"
          },
          {
            "name": "password",
            "in": "formData",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Login bem-sucedido",
            "schema": {
              "$ref": "#/definitions/AuthResponse"
            }
          },
          "401": {
            "description": "Não autorizado",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/register": {
      "post": {
        "summary": "Registra um novo usuário",
        "description": "Rota para registro de novos usuários",
        "parameters": [
          {
            "name": "name",
            "in": "formData",
            "required": true,
            "type": "string"
          },
          {
            "name": "email",
            "in": "formData",
            "required": true,
            "type": "string"
          },
          {
            "name": "password",
            "in": "formData",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Registro bem-sucedido",
            "schema": {
              "$ref": "#/definitions/AuthResponse"
            }
          },
          "400": {
            "description": "Erro no registro",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/logout": {
      "post": {
        "summary": "Desloga o usuário",
        "description": "Rota para logout do usuário",
        "responses": {
          "200": {
            "description": "Logout bem-sucedido",
            "schema": {
              "$ref": "#/definitions/MessageResponse"
            }
          }
        }
      }
    },
    "/refresh": {
      "post": {
        "summary": "Atualiza o token de autenticação",
        "description": "Rota para atualizar o token JWT",
        "responses": {
          "200": {
            "description": "Token atualizado com sucesso",
            "schema": {
              "$ref": "#/definitions/AuthResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "response": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "AuthResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string"
        },
        "user": {
          "$ref": "#/definitions/User"
        },
        "authorization": {
          "$ref": "#/definitions/Authorization"
        }
      }
    },
    "ErrorResponse": {
      "type": "object",
      "properties": {"title": "Api Rest Teste",
    "description": "API feita para testes",
        "status": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "MessageResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "User": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        }
      }
    },
    "Authorization": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    }
  }
}